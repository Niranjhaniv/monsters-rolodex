{"version":3,"sources":["components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAChB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCJHC,EAAW,SAACC,GAAD,OACtB,qBAAKP,UAAU,YAAf,SACGO,EAAMC,SAASC,KAAI,SAACV,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UCHZO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC4BjEG,E,kDAxBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAW,GACXS,YAAY,IAJF,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,oBAE/H,WAAW,IAAD,SACuBE,KAAKR,MAA7BR,EADC,EACDA,SAASS,EADR,EACQA,YACVQ,EAAiBjB,EAASkB,QAAO,SAAA3B,GAAO,OAAIA,EAAQK,KAAKuB,cAAcC,SAASX,EAAYY,wBAClG,OACA,sBAAK7B,UAAU,MAAf,UACA,0CACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAc,SAACkB,GAAD,OAAK,EAAKP,SAAS,CAACN,YAAca,EAAEC,OAAOC,WACjG,cAAC,EAAD,CAAUxB,SAAUiB,W,GAnBNQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.91049f58.chunk.js","sourcesContent":["import './card.style.css';\r\n\r\nexport const Card = ({monster}) =>(\r\n    <div className='card-container'>\r\n    <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}></img>\r\n    <h1>{monster.name}</h1>\r\n    <p>{monster.email}</p></div>\r\n)\r\n\r\n","import './card-list.styles.css';\r\nimport { Card } from \"./card/card.component\";\r\nexport const CardList = (props) => (\r\n  <div className=\"card-list\">\r\n    {props.monsters.map((monster) => (\r\n      <Card key={monster.id} monster={monster}/>\r\n    ))}\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\nexport const SearchBox = ({placeholder, handleChange}) =>(\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange}/>\r\n)","\nimport './App.css';\nimport {Component} from 'react';\nimport {CardList} from \"./components/card-list/card-list.component\"\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters : [],\n      searchField:''\n\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({monsters: users}))\n  }\n  render () {\n    const {monsters,searchField} = this.state;\n    const filterMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return (\n    <div className=\"App\">\n    <h1>Monsters</h1>\n    <SearchBox placeholder=\"search monster\" handleChange={(e)=>this.setState({searchField : e.target.value})}/> \n    <CardList monsters={filterMonsters}/>\n    </div>\n  );\n    };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}